program eventually__allow_grant {
    STATES {
        start : init, done_unlocking, lock, locking_st, consider_unlock_int, consider_unlock, consider_unlock_int, unlock, locked, con_error_st
    }

    ENVIRONMENT EVENTS {
        env_lock
    }

    CONTROLLER EVENTS {
        dec, inc, con_unlock
    }

    PROGRAM EVENTS {
        con_error, lock_free, locking, out_of_lock
    }

    VALUATION {
        got_lock : natural := 0;
        L : natural := 0;
    }

    ENVIRONMENT TRANSITIONS {
        start -> locking_st [env_lock && got_lock == 0],
        start -> con_error_st [env_lock && got_lock != 0],
        start -> consider_unlock [!env_lock # out_of_lock],

        locking_st -> lock [],

        lock -> locked [(L >= 0) $ L := L + 1;],
        lock -> con_error_st [!(L >= 0)],
        locked -> locking_st [env_lock # locking],
        locked -> consider_unlock [!env_lock # out_of_lock],
        consider_unlock_int -> consider_unlock_int [ # out_of_lock],
        consider_unlock -> consider_unlock [ # out_of_lock],

        done_unlocking -> start [L == 0 # lock_free, out_of_lock],
        done_unlocking -> start [L != 0 # out_of_lock],
        con_error_st -> con_error_st [ # con_error, out_of_lock]
    }

    CONTROLLER TRANSITIONS {
        start -> con_error_st [dec | inc],
        locking_st -> con_error_st [dec | inc],
        lock -> con_error_st [dec | inc],
        done_unlocking -> con_error_st [dec | inc],

        consider_unlock -> consider_unlock_int [con_unlock && got_lock != 0 $ L := L - 1],
        consider_unlock -> con_error_st [con_unlock && L == 0],
        consider_unlock -> done_unlocking [!con_unlock],

        locked -> locked [dec & !inc $ got_lock := got_lock - 1],
        locked -> locked [!dec & inc $ got_lock := got_lock + 1],
        locked -> locked [!((dec & !inc) || (!dec & inc))],
        consider_unlock_int -> consider_unlock [dec & !inc $ got_lock := got_lock - 1],
        consider_unlock_int -> consider_unlock [!dec & inc $ got_lock := got_lock + 1],
        consider_unlock_int -> consider_unlock [!((dec & !inc) || (!dec & inc))]
    }
}