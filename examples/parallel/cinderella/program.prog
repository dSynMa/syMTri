program eventually__allow_grant {
    STATES {
        stepmother : init, cinderella, won
    }

    ENVIRONMENT EVENTS {
        inc1, inc2, inc3, inc4, inc5, finished
    }

    CONTROLLER EVENTS {
        empty12, empty23, empty34, empty45, empty51
    }

    PROGRAM EVENTS {
        overflow
    }

    VALUATION {
        bucket1 : natural := 0;
        bucket2 : natural := 0;
        bucket3 : natural := 0;
        bucket4 : natural := 0;
        bucket5 : natural := 0;
        capacity : natural := 5;
        n : natural := 3;
    }

    ENVIRONMENT TRANSITIONS [semantics=by-order]{
        stepmother -> stepmother [inc1 & n > 0 $ bucket1 := bucket1 + 1; n := n - 1],
        stepmother -> stepmother [inc2 & n > 0 $ bucket2 := bucket2 + 1; n := n - 1],
        stepmother -> stepmother [inc3 & n > 0 $ bucket3 := bucket3 + 1; n := n - 1],
        stepmother -> stepmother [inc4 & n > 0 $ bucket4 := bucket4 + 1; n := n - 1],
        stepmother -> stepmother [inc5 & n > 0 $ bucket5 := bucket5 + 1; n := n - 1],
        stepmother -> cinderella [finished $ n := 3],
        stepmother -> won [bucket1 > capacity | bucket2 > capacity | bucket3 > capacity | bucket4 > capacity | bucket5 > capacity # overflow]
    }

    CONTROLLER TRANSITIONS [semantics=by-order]{
        cinderella -> stepmother [empty12 $ bucket1 := 0, bucket2 := 0],
        cinderella -> stepmother [empty23 $ bucket2 := 0, bucket3 := 0],
        cinderella -> stepmother [empty34 $ bucket3 := 0, bucket4 := 0],
        cinderella -> stepmother [empty45 $ bucket4 := 0, bucket5 := 0],
        cinderella -> stepmother [empty51 $ bucket5 := 0, bucket1 := 0]
    }
}